name: CI

on:
  pull_request:
    branches:
      - '**'

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: pytest -q

  terraform-check:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt (check)
        working-directory: terraform
        run: terraform fmt -diff -check

      - name: Terraform init & validate
        working-directory: terraform
        run: |
          terraform init -backend=false
          terraform validate

  terraform-format:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # allow the job to push formatting commits
          persist-credentials: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Run terraform fmt (apply)
        working-directory: terraform
        run: |
          terraform fmt -recursive

      - name: Commit & push formatting changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Check if any files changed by fmt
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "chore(terraform): fmt"
            git push
          else
            echo "No formatting changes"
          fi